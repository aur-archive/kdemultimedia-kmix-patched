--- a/kmix-4.9.4/gui/kmixdockwidget.h	2012-08-13 04:39:24.000000000 -0500
+++ b/kmix-4.9.4/gui/kmixdockwidget.h	2012-11-19 23:54:11.000000000 -0600
@@ -24,7 +24,6 @@
 #define KMIXDOCKWIDGET_H
 
 class QString;
-#include <QWidget>
 class QWidgetAction;
 #include <kstatusnotifieritem.h>
 
@@ -33,6 +32,35 @@
 class ViewDockAreaPopup;
 class Volume;
 
+/**
+ * @brief The MetaMixer class provides a solid wrapper around a possible changing mixer.
+ *
+ * The primay use of this class is to provide one instance to connect slots to
+ * while the underlying object that triggers the signals can be changing.
+ * Additionally it nicely hides the rewiring logic that is going on in the back.
+ */
+class MetaMixer : public QObject
+{
+    Q_OBJECT
+public:
+    MetaMixer() : m_mixer(0) {}
+
+    /**
+     * @brief rewires against current master mixer
+     * @note this also triggers all signals to ensure UI updates are done accordingly
+     */
+    void reset();
+
+    Mixer *mixer() const { return m_mixer; }
+    bool hasMixer() const { return m_mixer; }
+
+signals:
+    void controlChanged();
+
+private:
+    Mixer *m_mixer;
+};
+
 namespace Phonon
 {
     class MediaObject;
@@ -51,6 +79,7 @@
    void setErrorPixmap();
    void ignoreNextEvent();
    //ViewDockAreaPopup* getDockAreaPopup();
+   void update();
 
  signals:
    void newMasterSelected();
@@ -77,7 +106,7 @@
    char _oldPixmapType;
    bool _volumePopup;
    KMixWindow* _kmixMainWindow;
-   Mixer *m_mixer;
+   MetaMixer m_metaMixer;
 
    bool _contextMenuWasOpen;
 
@@ -89,7 +118,6 @@
    void selectMaster();
    void handleNewMaster(QString& soundcard_id, QString& channel_id);
    void contextMenuAboutToShow();
-   void activateMenuOrWindow(bool, const QPoint &);
 };
 
 #endif
